{"version":3,"file":"wizard-src-lib-wizard-stories-mdx.e83317a0.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AAMA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;;;;;;;ACrBA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AAtCA;AAwCA;;;;;;;;;;;;;;;AC9CA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAjBA;AAmBA;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;;;;;;;;;;;;;;;ACHA;AAEA;AAAA;AAAA;AAGA;AAWA;AATA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;AAGA;AAzDA;AA2DA;;;;;;;;;;;;;;;;;;;AC/DA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;ACHA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;AC1BA;AACA;AAEA;;;;;;;;;;;;;;;ACHA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAZA;AAcA;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAoBA;AAgBA;AAdA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AAGA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AA9HA;AAgsources":["webpack://novatics/./packages/wizard/src/lib/Tab/styles.ts","webpack://novatics/./packages/wizard/src/lib/Tab/index.tsx","webpack://novatics/./packages/wizard/src/lib/Header/index.tsx","webpack://novatics/./packages/wizard/src/lib/Footer/styles.tsx","webpack://novatics/./packages/wizard/src/lib/Footer/index.tsx","webpack://novatics/./packages/wizard/src/lib/TabPanel/styles.ts","webpack://novatics/./packages/wizard/src/lib/TabPanel/index.tsx","webpack://novatics/./packages/wizard/src/lib/styles.tsx","webpack://novatics/./packages/wizard/src/lib/Content/index.tsx","webpack://novatics/./packages/wizard/src/lib/wizard.tsx","webpack://novatics/./packages/wizard/src/lib/wizard.stories.mdx"],"sourcesContent":["import { styled } from '@mui/material';\nimport Box from '@mui/material/Box';\n\ninterface ContainerProps {\n  disabled: boolean;\n  showCompleted: boolean;\n}\n\nexport const Container = styled(Box)<ContainerProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  white-space: normal;\n  cursor: ${({ disabled }) => (disabled ? 'no-drop' : 'cursor')};\n\n  svg {\n    opacity: ${({ showCompleted }) => (showCompleted ? '1' : '0')};\n  }\n`;\n\nexport const TextContainer = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n","import CheckIcon from '@mui/icons-material/Check';\nimport Typography from '@mui/material/Typography';\n\nimport { Container, TextContainer } from './styles';\nimport { TabProps } from '../types';\n\nconst Tab = (props: TabProps) => {\n  const { step, isCompleted, showCompleted, TabOverride, isActive } = props;\n\n  const { components, title, subtitle, disabled, ...others } = step;\n\n  const tabOverrideProps = { ...props };\n  delete tabOverrideProps.TabOverride;\n\n  const disabledTextColor = disabled ? 'gray' : '';\n\n  if (components?.Tab) {\n    return components.Tab({\n      step: { title, subtitle, disabled, isActive, ...others },\n    });\n  }\n\n  if (TabOverride) {\n    return <TabOverride {...tabOverrideProps} />;\n  }\n\n  return (\n    <Container disabled={disabled} showCompleted={isCompleted && showCompleted}>\n      <TextContainer>\n        <Typography variant=\"body1\" color={disabledTextColor}>\n          {title ? title : ''}\n        </Typography>\n        <Typography variant=\"subtitle2\" color={disabledTextColor}>\n          {subtitle ? subtitle : ''}\n        </Typography>\n      </TextContainer>\n\n      <CheckIcon\n        sx={{ marginLeft: '20px', marginRight: '10px' }}\n        fontSize=\"small\"\n        color=\"success\"\n      />\n    </Container>\n  );\n};\n\nexport default Tab;\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport { HeaderProps } from '../types';\n\nconst Header = ({ step, ComponentOverride }: HeaderProps) => {\n  const { components, ...others } = step;\n\n  if (components?.Header) {\n    return components.Header({ step: others });\n  }\n\n  if (ComponentOverride) {\n    return <ComponentOverride step={step} />;\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h6\">{step.title}</Typography>\n      <Typography variant=\"subtitle2\">{step.subtitle}</Typography>\n    </Box>\n  );\n};\n\nexport default Header;\n","import { styled } from '@mui/material';\nimport Box from '@mui/material/Box';\n\nexport const Container = styled(Box)`\n  margin-top: auto;\n  display: flex;\n  justify-content: space-between;\n\n  :has(button:only-child) {\n    justify-content: flex-end;\n  }\n`;\n","import Button from '@mui/material/Button';\n\nimport { Container } from './styles';\nimport { FooterProps } from '../types';\n\nconst Footer = ({\n  handleBack,\n  handleNext,\n  handleFinish,\n  backText = 'Back',\n  nextText = 'Next',\n  finishText = 'Finish',\n  isFirst = false,\n  isLast = false,\n  ComponentOverride,\n  step,\n}: FooterProps) => {\n  const { components, ...others } = step;\n\n  if (components?.Footer) {\n    return components.Footer({\n      step: others,\n      isFirst,\n      isLast,\n      handleBack,\n      handleNext,\n      handleFinish,\n    });\n  }\n\n  if (ComponentOverride) {\n    return (\n      <ComponentOverride\n        isFirst={isFirst}\n        isLast={isLast}\n        handleBack={handleBack}\n        handleNext={handleNext}\n        handleFinish={handleFinish}\n        step={step}\n      />\n    );\n  }\n\n  return (\n    <Container>\n      {!isFirst && (\n        <Button variant=\"outlined\" onClick={handleBack}>\n          {backText}\n        </Button>\n      )}\n\n      {!isLast ? (\n        <Button variant=\"contained\" onClick={handleNext}>\n          {nextText}\n        </Button>\n      ) : (\n        <Button variant=\"contained\" onClick={handleFinish}>\n          {finishText}\n        </Button>\n      )}\n    </Container>\n  );\n};\n\nexport default Footer;\n","import styled from '@emotion/styled';\nimport Paper from '@mui/material/Paper';\n\nexport const PaperContainer = styled(Paper)`\n  padding: 30px;\n  min-height: calc(100vh - 100px);\n  display: flex;\n  flex-direction: column;\n`;\n","import { PaperContainer } from './styles';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <PaperContainer variant=\"outlined\">{children}</PaperContainer>\n      )}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import Box from '@mui/material/Box';\nimport { styled } from '@mui/system';\n\nexport const TabContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  height: 72px;\n  cursor: pointer;\n`;\n","import Box from '@mui/material/Box';\nimport { ContentProps } from '../types';\n\nconst Content = ({ step, ComponentOverride }: ContentProps) => {\n  const { components, ...others } = step;\n\n  if (components?.Content) {\n    return components.Content({ step: others });\n  }\n\n  if (ComponentOverride) {\n    return <ComponentOverride step={step} />;\n  }\n\n  return <Box sx={{ mt: '20px' }}>{step.content}</Box>;\n};\n\nexport default Content;\n","import React, { useState, useEffect } from 'react';\nimport Tabs, { TabsProps as MUITabsProps } from '@mui/material/Tabs';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport Tab from './Tab';\nimport Header from './Header';\nimport Footer from './Footer';\nimport TabPanel from './TabPanel';\nimport {\n  Step,\n  HeaderBaseProps,\n  FooterBaseProps,\n  ContentBaseProps,\n  TabBaseProps,\n} from './types';\nimport { TabContainer } from './styles';\nimport Content from './Content';\n\nfunction setAccessibilityProps(index: number) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nexport interface WizardProps {\n  onBack?: (stepIndex: number) => void;\n  onNext?: (stepIndex: number) => void;\n  onChange?: (stepIndex: number) => void;\n  onFinish?: () => void;\n  isLinear?: boolean;\n  showCompleted?: boolean;\n  TabOverride: React.FC<TabBaseProps>;\n  HeaderOverride: React.FC<HeaderBaseProps>;\n  ContentOverride: React.FC<ContentBaseProps>;\n  FooterOverride: React.FC<FooterBaseProps>;\n  steps: Step[];\n  tabIndicatorColor?: string;\n  ContainerProps?: object;\n  TabsProps?: MUITabsProps;\n  TabPanelContainerProps?: object;\n}\n\nexport const Wizard = ({\n  onBack,\n  onNext,\n  onFinish,\n  onChange,\n  isLinear = false,\n  showCompleted = false,\n  tabIndicatorColor,\n  ContainerProps,\n  TabsProps,\n  TabPanelContainerProps,\n  TabOverride,\n  HeaderOverride,\n  ContentOverride,\n  FooterOverride,\n  steps,\n}: WizardProps) => {\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const handleChange = (newStep: number) => {\n    onChange && onChange(currentStep);\n    const isNextStep = newStep === currentStep + 1;\n    const isDisabled = steps[newStep] ? steps[newStep].disabled : false;\n    if (isDisabled) return;\n    if (isLinear && !isNextStep) return;\n    setCurrentStep(newStep);\n  };\n\n  const handleFinish = () => {\n    onFinish && onFinish();\n  };\n\n  const handleNext = () => {\n    const isLastStep = currentStep >= steps.length - 1;\n\n    onNext && onNext(currentStep);\n    if (isLastStep) return;\n\n    handleChange(currentStep + 1);\n  };\n\n  const handleBack = () => {\n    const isFirstStep = currentStep === 0;\n\n    onBack && onBack(currentStep);\n    if (isFirstStep) return;\n\n    handleChange(currentStep - 1);\n  };\n\n  useEffect(() => {\n    const allDisabled = steps.every((step) => step.disabled === true);\n\n    if (steps.length === 0) {\n      setCurrentStep(-2);\n    } else if (steps[currentStep].disabled && !allDisabled) {\n      handleNext();\n    } else if (allDisabled) {\n      setCurrentStep(-1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Box sx={{ display: 'flex' }} width=\"100%\" {...ContainerProps}>\n      <Tabs\n        orientation=\"vertical\"\n        value={currentStep}\n        aria-label=\"Vertical tabs\"\n        sx={{ borderRight: 1, borderColor: 'divider' }}\n        TabIndicatorProps={{\n          sx: { bgcolor: tabIndicatorColor },\n        }}\n        {...TabsProps}\n      >\n        {steps.map((step, index) => {\n          return (\n            <TabContainer\n              key={step.title}\n              onClick={() => handleChange(index)}\n              {...setAccessibilityProps(index)}\n            >\n              <Tab\n                isActive={index === currentStep}\n                step={step}\n                isCompleted={step.status === 'completed'}\n                showCompleted={showCompleted}\n                TabOverride={TabOverride}\n              />\n            </TabContainer>\n          );\n        })}\n      </Tabs>\n\n      <Box width=\"80%\" {...TabPanelContainerProps}>\n        <TabPanel value={currentStep} index={-2}>\n          <Box sx={{ textAlign: 'center' }}>\n            <Typography variant=\"body1\">No steps available</Typography>\n          </Box>\n        </TabPanel>\n        <TabPanel value={currentStep} index={-1}>\n          <Box sx={{ textAlign: 'center' }}>\n            <Typography variant=\"body1\">All steps are disabled</Typography>\n          </Box>\n        </TabPanel>\n\n        {steps.map((step, index) => (\n          <TabPanel key={step.title} value={currentStep} index={index}>\n            <Header step={step} ComponentOverride={HeaderOverride} />\n\n            <Content step={step} ComponentOverride={ContentOverride} />\n\n            <Footer\n              isFirst={index === 0}\n              isLast={index + 1 === steps.length}\n              step={step}\n              handleBack={handleBack}\n              handleNext={handleNext}\n              handleFinish={handleFinish}\n              ComponentOverride={FooterOverride}\n            />\n          </TabPanel>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Wizard;\n","\nimport React from 'react';\n\nimport { useMDXComponents as _provideComponents } from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport { Meta, Story, Canvas, ArgsTable } from '@storybook/addon-docs/blocks';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport { useState } from 'react';\nimport pkg from '../../package.json';\nimport Wizard from './wizard';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport const steps = [{\n  title: '01. Select campaign settings',\n  subtitle: 'Subtitle',\n  content: 'For each ad campaign that you create, you can control how much ' + \"you're willing to spend on clicks and conversions, which networks \" + 'and geographical locations you want your ads to show on, and more.',\n  disabled: false,\n  status: undefined\n}, {\n  title: '02. Create an ad group',\n  subtitle: 'You can write some cool information stuff here',\n  content: `Small text content`,\n  disabled: false,\n  status: undefined\n}, {\n  title: '03. Create an ad',\n  subtitle: 'Subtitle',\n  content: 'Try out different ad text to see what brings in the most customers, ' + 'and learn how to enhance your ads using features like ad extensions.' + 'If you run into any problems with your ads, find out how to tell if ' + \"they're running and how to resolve approval issues.\",\n  disabled: false,\n  status: undefined\n}];\n\nfunction MDXContent(props = {}) {\n  const {\n    wrapper: MDXLayout\n  } = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? /*#__PURE__*/_jsx(MDXLayout, { ...props,\n    children: /*#__PURE__*/_jsx(_createMdxContent, {})\n  }) : _createMdxContent();\n\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      h3: \"h3\",\n      code: \"code\",\n      pre: \"pre\",\n      a: \"a\",\n      div: \"div\"\n    }, _provideComponents(), props.components);\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Meta, {\n        title: \"Wizard\",\n        component: Wizard\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.h1, {\n        id: \"wizard-\",\n        children: [\"Wizard \", /*#__PURE__*/_jsx(\"img\", {\n          src: `https://img.shields.io/badge/Version-v${pkg.version}-brightgreenn`\n        })]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"Use this component for currency inputs\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"installation\",\n        children: \"Installation\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"First install the latest version of the package from \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"@novatics/wizard\"\n        }), \".\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"yarn add @novatics/wizard\\n\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"dependencies\",\n        children: \"Dependencies\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"This component extends some \", /*#__PURE__*/_jsx(_components.a, {\n          href: \"https://mui.com/material-ui/getting-started/overview/\",\n          target: \"_blank\",\n          rel: \"nofollow noopener noreferrer\",\n          children: \"Material UI\"\n        }), \" components. Therefore is needed to install Material UI:\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"yarn add @mui/material @emotion/react @emotion/styled\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"basic-usage\",\n        children: \"Basic Usage\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import Wizard from '@novatics/wizard';\\n\\n<Wizard steps={['...']} />;\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Basic Usage\",\n          children: args => /*#__PURE__*/_jsx(Wizard, {\n            steps: steps\n          })\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"linear\",\n        children: \"Linear\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"The \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"isLinear\"\n        }), \" prop defines whether the tabs will navigate in a linear way or not:\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import Wizard from '@novatics/wizard';\\n\\n<Wizard steps={['...']} isLinear />;\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Linear\",\n          children: args => /*#__PURE__*/_jsx(Wizard, {\n            steps: steps,\n            isLinear: true\n          })\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"show-completed\",\n        children: \"Show Completed\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"The \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"showCompleted\"\n        }), \" prop defines whether the tab will show a checkmark when a step is completed or not.\"]\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"To set a step completed, we have to set the value of \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"status\"\n        }), \" key inside \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"steps\"\n        }), \" to \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"'completed'\"\n        }), \":\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Show Completed\",\n          children: args => {\n            const [completeSteps, setCompleteSteps] = useState(steps);\n\n            const completeStep = stepIndex => {\n              setCompleteSteps(value => value.map((step, i) => i === stepIndex ? { ...step,\n                status: 'completed'\n              } : step));\n            };\n\n            return /*#__PURE__*/_jsx(Wizard, {\n              onChange: stepIndex => completeStep(stepIndex),\n              steps: completeSteps,\n              showCompleted: true\n            });\n          }\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"components-override\",\n        children: \"Components Override\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.p, {\n        children: \"It is possible to override the whole Wizard component by using the following props:\"\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import Wizard from '@novatics/wizard';\\n\\nconst steps = ['...'];\\n\\n<Wizard\\n  steps={steps}\\n  TabOverride={() => <div>Tab</div>}\\n  HeaderOverride={() => <div>Header</div>}\\n  ContentOverride={() => <div>Content</div>}\\n  FooterOverride={() => <div>Footer</div>}\\n/>;\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"We can also override components for individual tabs by using the \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"components\"\n        }), \" key inside \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"steps\"\n        }), \" array:\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import Wizard from '@novatics/wizard';\\n\\nconst steps = [\\n  {\\n    title: '01. Select campaign settings',\\n    subtitle: 'Subtitle',\\n    content: `...`,\\n    disabled: false,\\n    components: {\\n      Tab: () => <div>Individual Tab</div>,\\n      Header: () => <div>Individual Header</div>,\\n      Content: () => <div>Individual Content</div>,\\n      Footer: () => <div>Individual Footer</div>,\\n    },\\n  },\\n];\\n\\n<Wizard steps={steps} />;\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Components Override\",\n          children: args => {\n            const newSteps = steps.map((step, i) => {\n              return i === 0 ? { ...step,\n                components: {\n                  Tab: () => /*#__PURE__*/_jsx(_components.div, {\n                    children: \"Individual Tab\"\n                  }),\n                  Header: () => /*#__PURE__*/_jsx(_components.div, {\n                    children: \"Individual header\"\n                  }),\n                  Content: () => /*#__PURE__*/_jsx(_components.div, {\n                    children: \"Individual content\"\n                  }),\n                  Footer: () => /*#__PURE__*/_jsx(_components.div, {\n                    children: \"Individual footer\"\n                  })\n                }\n              } : step;\n            });\n            return /*#__PURE__*/_jsx(Wizard, {\n              steps: newSteps,\n              HeaderOverride: () => /*#__PURE__*/_jsx(_components.div, {\n                children: \"Header\"\n              }),\n              ContentOverride: () => /*#__PURE__*/_jsx(_components.div, {\n                children: \"Content\"\n              }),\n              FooterOverride: () => /*#__PURE__*/_jsx(_components.div, {\n                children: \"Footer\"\n              })\n            });\n          }\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"disabled-tab\",\n        children: \"Disabled Tab\"\n      }), \"\\n\", /*#__PURE__*/_jsxs(_components.p, {\n        children: [\"The \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"disabled\"\n        }), \" key inside \", /*#__PURE__*/_jsx(_components.code, {\n          children: \"steps\"\n        }), \" array allows individual tabs to be disabled:\"]\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.pre, {\n        children: /*#__PURE__*/_jsx(_components.code, {\n          className: \"language-tsx\",\n          children: \"import Wizard from '@novatics/wizard';\\n\\nconst steps = [\\n  {\\n    title: '03. Create an ad',\\n    subtitle: 'Subtitle',\\n    content: `...`,\\n    disabled: true,\\n  },\\n];\\n\\n<Wizard steps={steps} />;\\n\"\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          name: \"Disabled Tab\",\n          children: args => {\n            const newSteps = steps.map((step, i) => {\n              return i === 2 ? { ...step,\n                disabled: true\n              } : step;\n            });\n            return /*#__PURE__*/_jsx(Wizard, {\n              steps: newSteps\n            });\n          }\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(_components.h3, {\n        id: \"playground\",\n        children: \"Playground\"\n      }), \"\\n\", /*#__PURE__*/_jsx(Canvas, {\n        children: /*#__PURE__*/_jsx(Story, {\n          argTypes: {\n            isLinear: {\n              name: 'isLinear',\n              description: 'isLinear',\n              table: {\n                type: {\n                  summary: 'boolean'\n                },\n                defaultValue: {\n                  summary: false\n                }\n              },\n              control: {\n                type: 'boolean'\n              }\n            },\n            showCompleted: {\n              name: 'showCompleted',\n              description: 'showCompleted',\n              table: {\n                type: {\n                  summary: 'boolean'\n                },\n                defaultValue: {\n                  summary: false\n                }\n              },\n              control: {\n                type: 'boolean'\n              }\n            },\n            tabIndicatorColor: {\n              name: 'tabIndicatorColor',\n              description: 'tabIndicatorColor',\n              table: {\n                type: {\n                  summary: 'string'\n                },\n                defaultValue: {\n                  summary: 'blue'\n                }\n              },\n              control: {\n                type: 'text'\n              }\n            },\n            onNext: {\n              description: 'Method called when next button is pressed'\n            },\n            onBack: {\n              description: 'Method called when back button is pressed'\n            },\n            onFinish: {\n              description: 'Method called when finish button is pressed'\n            },\n            onChange: {\n              description: 'Method called when current step changes'\n            },\n            ContainerProps: {\n              description: 'Container Props'\n            },\n            TabsProps: {\n              description: 'Tabs Props'\n            },\n            TabPanelContainerProps: {\n              description: 'Tab Panel Container Props'\n            },\n            TabOverride: {\n              description: 'Tab Override'\n            },\n            HeaderOverride: {\n              description: 'Header Override'\n            },\n            ContentOverride: {\n              description: 'Content Override'\n            },\n            FooterOverride: {\n              description: 'Footer Override'\n            },\n            steps: {\n              description: 'steps'\n            }\n          },\n          name: \"Playground\",\n          children: args => {\n            return /*#__PURE__*/_jsx(Wizard, {\n              onNext: () => {},\n              onBack: () => {},\n              onFinish: () => {},\n              steps: steps,\n              ...args\n            });\n          }\n        })\n      }), \"\\n\", /*#__PURE__*/_jsx(ArgsTable, {\n        story: \"Playground\"\n      })]\n    });\n  }\n}\n/* ========= */\n\n\nexport const basicUsage = args => /*#__PURE__*/_jsx(Wizard, {\n  steps: steps\n});\nbasicUsage.storyName = 'Basic Usage';\nbasicUsage.parameters = {\n  storySource: {\n    source: 'args => <Wizard steps={steps} />'\n  }\n};\nexport const linear = args => /*#__PURE__*/_jsx(Wizard, {\n  steps: steps,\n  isLinear: true\n});\nlinear.storyName = 'Linear';\nlinear.parameters = {\n  storySource: {\n    source: 'args => <Wizard steps={steps} isLinear />'\n  }\n};\nexport const showCompleted = args => {\n  const [completeSteps, setCompleteSteps] = useState(steps);\n\n  const completeStep = stepIndex => {\n    setCompleteSteps(value => value.map((step, i) => i === stepIndex ? { ...step,\n      status: \"completed\"\n    } : step));\n  };\n\n  return /*#__PURE__*/_jsx(Wizard, {\n    onChange: stepIndex => completeStep(stepIndex),\n    steps: completeSteps,\n    showCompleted: true\n  });\n};\nshowCompleted.storyName = 'Show Completed';\nshowCompleted.parameters = {\n  storySource: {\n    source: 'args => {\\n  const [completeSteps, setCompleteSteps] = useState(steps);\\n\\n  const completeStep = stepIndex => {\\n    setCompleteSteps(value => value.map((step, i) => i === stepIndex ? { ...step,\\n      status: \\\"completed\\\"\\n    } : step));\\n  };\\n\\n  return <Wizard onChange={stepIndex => completeStep(stepIndex)} steps={completeSteps} showCompleted />;\\n}'\n  }\n};\nexport const componentsOverride = args => {\n  const newSteps = steps.map((step, i) => {\n    return i === 0 ? { ...step,\n      components: {\n        Tab: () => /*#__PURE__*/_jsx(\"div\", {\n          children: \"Individual Tab\"\n        }),\n        Header: () => /*#__PURE__*/_jsx(\"div\", {\n          children: \"Individual header\"\n        }),\n        Content: () => /*#__PURE__*/_jsx(\"div\", {\n          children: \"Individual content\"\n        }),\n        Footer: () => /*#__PURE__*/_jsx(\"div\", {\n          children: \"Individual footer\"\n        })\n      }\n    } : step;\n  });\n  return /*#__PURE__*/_jsx(Wizard, {\n    steps: newSteps,\n    HeaderOverride: () => /*#__PURE__*/_jsx(\"div\", {\n      children: \"Header\"\n    }),\n    ContentOverride: () => /*#__PURE__*/_jsx(\"div\", {\n      children: \"Content\"\n    }),\n    FooterOverride: () => /*#__PURE__*/_jsx(\"div\", {\n      children: \"Footer\"\n    })\n  });\n};\ncomponentsOverride.storyName = 'Components Override';\ncomponentsOverride.parameters = {\n  storySource: {\n    source: 'args => {\\n  const newSteps = steps.map((step, i) => {\\n    return i === 0 ? { ...step,\\n      components: {\\n        Tab: () => <div>Individual Tab</div>,\\n        Header: () => <div>Individual header</div>,\\n        Content: () => <div>Individual content</div>,\\n        Footer: () => <div>Individual footer</div>\\n      }\\n    } : step;\\n  });\\n  return <Wizard steps={newSteps} HeaderOverride={() => <div>Header</div>} ContentOverride={() => <div>Content</div>} FooterOverride={() => <div>Footer</div>} />;\\n}'\n  }\n};\nexport const disabledTab = args => {\n  const newSteps = steps.map((step, i) => {\n    return i === 2 ? { ...step,\n      disabled: true\n    } : step;\n  });\n  return /*#__PURE__*/_jsx(Wizard, {\n    steps: newSteps\n  });\n};\ndisabledTab.storyName = 'Disabled Tab';\ndisabledTab.parameters = {\n  storySource: {\n    source: 'args => {\\n  const newSteps = steps.map((step, i) => {\\n    return i === 2 ? { ...step,\\n      disabled: true\\n    } : step;\\n  });\\n  return <Wizard steps={newSteps} />;\\n}'\n  }\n};\nexport const playground = args => {\n  return /*#__PURE__*/_jsx(Wizard, {\n    onNext: () => {},\n    onBack: () => {},\n    onFinish: () => {},\n    steps: steps,\n    ...args\n  });\n};\nplayground.storyName = 'Playground';\nplayground.argTypes = {\n  isLinear: {\n    name: \"isLinear\",\n    description: \"isLinear\",\n    table: {\n      type: {\n        summary: \"boolean\"\n      },\n      defaultValue: {\n        summary: false\n      }\n    },\n    control: {\n      type: \"boolean\"\n    }\n  },\n  showCompleted: {\n    name: \"showCompleted\",\n    description: \"showCompleted\",\n    table: {\n      type: {\n        summary: \"boolean\"\n      },\n      defaultValue: {\n        summary: false\n      }\n    },\n    control: {\n      type: \"boolean\"\n    }\n  },\n  tabIndicatorColor: {\n    name: \"tabIndicatorColor\",\n    description: \"tabIndicatorColor\",\n    table: {\n      type: {\n        summary: \"string\"\n      },\n      defaultValue: {\n        summary: \"blue\"\n      }\n    },\n    control: {\n      type: \"text\"\n    }\n  },\n  onNext: {\n    description: \"Method called when next button is pressed\"\n  },\n  onBack: {\n    description: \"Method called when back button is pressed\"\n  },\n  onFinish: {\n    description: \"Method called when finish button is pressed\"\n  },\n  onChange: {\n    description: \"Method called when current step changes\"\n  },\n  ContainerProps: {\n    description: \"Container Props\"\n  },\n  TabsProps: {\n    description: \"Tabs Props\"\n  },\n  TabPanelContainerProps: {\n    description: \"Tab Panel Container Props\"\n  },\n  TabOverride: {\n    description: \"Tab Override\"\n  },\n  HeaderOverride: {\n    description: \"Header Override\"\n  },\n  ContentOverride: {\n    description: \"Content Override\"\n  },\n  FooterOverride: {\n    description: \"Footer Override\"\n  },\n  steps: {\n    description: \"steps\"\n  }\n};\nplayground.parameters = {\n  storySource: {\n    source: 'args => {\\n  return <Wizard onNext={() => {}} onBack={() => {}} onFinish={() => {}} steps={steps} {...args} />;\\n}'\n  }\n};\nconst componentMeta = {\n  title: 'Wizard',\n  component: Wizard,\n  tags: ['stories-mdx'],\n  includeStories: [\"basicUsage\", \"linear\", \"showCompleted\", \"componentsOverride\", \"disabledTab\", \"playground\"]\n};\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = { ...(componentMeta.parameters.docs || {}),\n  page: MDXContent\n};\nexport default componentMeta;"],"names":[],"sourceRoot":""}