{"version":3,"file":"checkbox-formik-field-6ff11040.js","sources":["../../../../packages/checkbox-field/src/lib/checkbox-field.tsx","../../../../packages/checkbox-field/src/lib/checkbox-formik-field.tsx"],"sourcesContent":["import Checkbox, { CheckboxProps } from '@novatics/checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport { styled, useTheme } from '@mui/material';\nimport { TypographyProps } from '@mui/material/Typography';\nimport MuiFormControlLabel, {\n  FormControlLabelProps,\n} from '@mui/material/FormControlLabel';\n\nconst FormControlLabel = styled(MuiFormControlLabel)(({ theme }) => ({\n  paddingTop: theme.spacing(1),\n  paddingBottom: theme.spacing(1),\n  '&.MuiFormControlLabel-root': {\n    margin: 0,\n  },\n}));\n\nexport type CheckboxFieldProps = FormControlLabelProps &\n  CheckboxProps & {\n    typography: Extract<TypographyProps['variant'], 'bodySmall' | 'body'>;\n    error?: string | boolean;\n    hint?: string;\n  };\n\nconst CheckboxField = (props: CheckboxFieldProps) => {\n  const theme = useTheme();\n\n  const typographyVariant = props.typography as TypographyProps['variant'];\n  const typographyOverride = typographyVariant\n    ? theme.typography[typographyVariant]\n    : undefined;\n\n  const hasError = Boolean(props.error);\n  const color = hasError ? 'error' : undefined;\n  const labelPadding = {\n    paddingRight: theme.spacing(0.5),\n    paddingLeft: theme.spacing(0.5),\n  };\n\n  if (props.required) {\n    if (props.labelPlacement === 'start') {\n      labelPadding.paddingLeft = '0px';\n    } else {\n      labelPadding.paddingRight = '0px';\n    }\n  }\n\n  return (\n    <FormControl>\n      <FormControlLabel\n        {...props}\n        control={<Checkbox color={color} {...props} />}\n        slotProps={{\n          ...props.slotProps,\n          typography: {\n            color: hasError ? theme.palette.error.main : undefined,\n            ...typographyOverride,\n            ...labelPadding,\n            ...props.slotProps?.typography,\n          },\n        }}\n      />\n    </FormControl>\n  );\n};\n\nexport { CheckboxField };\nexport default CheckboxField;\n","import { useCallback, useMemo } from 'react';\nimport { Field, FieldProps } from 'formik';\n\nimport { CheckboxField, CheckboxFieldProps } from './checkbox-field';\n\nexport type CheckboxFormikFieldProps<T, U> = CheckboxFieldProps &\n  FieldProps<T, U>;\n\nconst CheckboxFormikField = <T, U>(props: CheckboxFormikFieldProps<T, U>) => {\n  const internalValidate = useCallback(\n    (value) => (props.required ? !value : false),\n    [props.required]\n  );\n\n  const label = useMemo(\n    () => (props.label ? props.label : props.name),\n    [props.label, props.name]\n  );\n\n  return (\n    <Field validate={internalValidate} {...props}>\n      {({ field, form, meta }: FieldProps<boolean>) => {\n        const hasError =\n          (form.touched || meta.touched) &&\n          (meta.error || Boolean(form.errors[field.name]));\n\n        return (\n          <CheckboxField\n            error={hasError}\n            {...props}\n            label={label}\n            value={field.value}\n            onChange={(event, value) => {\n              field.onChange(event);\n              props.onChange && props.onChange(event, value);\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nexport { CheckboxFormikField };\nexport default CheckboxFormikField;\n"],"names":["FormControlLabel","styled","MuiFormControlLabel","theme","CheckboxField","props","useTheme","typographyVariant","typographyOverride","hasError","color","labelPadding","jsx","FormControl","Checkbox","_a","CheckboxFormikField","internalValidate","useCallback","value","label","useMemo","Field","field","form","meta","event"],"mappings":"6XAQA,MAAAA,EAAAC,EAAAC,CAAA,EAAA,CAAA,CAAA,MAAAC,CAAA,KAAA,CAAqE,WAAAA,EAAA,QAAA,CAAA,EACxC,cAAAA,EAAA,QAAA,CAAA,EACG,6BAAA,CACA,OAAA,CACpB,CAEZ,EAAA,EASAC,EAAAC,GAAA,OACE,MAAAF,EAAAG,IAEAC,EAAAF,EAAA,WACAG,EAAAD,EAAAJ,EAAA,WAAAI,CAAA,EAAA,OAIAE,EAAA,EAAAJ,EAAA,MACAK,EAAAD,EAAA,QAAA,OACAE,EAAA,CAAqB,aAAAR,EAAA,QAAA,EAAA,EACY,YAAAA,EAAA,QAAA,EAAA,CACD,EAGhC,OAAAE,EAAA,WACEA,EAAA,iBAAA,QACEM,EAAA,YAAA,MAEAA,EAAA,aAAA,OAIJC,EAAAC,EAAA,CAAA,SAAAD,EAEIZ,EAAC,CAAA,GAAAK,EACK,QAAAO,EAAAE,EAAA,CAAA,MAAAJ,EAAA,GAAAL,CAAA,CAAA,EACwC,UAAA,CACjC,GAAAA,EAAA,UACA,WAAA,CACG,MAAAI,EAAAN,EAAA,QAAA,MAAA,KAAA,OACmC,GAAAK,EAC1C,GAAAG,EACA,IAAAI,EAAAV,EAAA,YAAA,YAAAU,EAAA,UACiB,CACtB,CACF,CAAA,CAAA,CAAA,CAIR,sPCvDA,MAAAC,EAAAX,GAAA,CACE,MAAAY,EAAAC,EAAA,YAAyBC,GAAAd,EAAA,SAAA,CAAAc,EAAA,GACe,CAAAd,EAAA,QAAA,CACvB,EAGjBe,EAAAC,EAAA,QAAc,IAAAhB,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAC6B,CAAAA,EAAA,MAAAA,EAAA,IAAA,CACjB,EAG1B,OAAAO,EAAAU,EAAA,CAAA,SAAAL,EAAA,GAAAZ,EAAA,SAAA,CAAA,CAAA,MAAAkB,EAAA,KAAAC,EAAA,KAAAC,CAAA,IAAA,CAGM,MAAAhB,GAAAe,EAAA,SAAAC,EAAA,WAAAA,EAAA,OAAA,EAAAD,EAAA,OAAAD,EAAA,IAAA,GAIA,OAAAX,EACER,EAAC,CAAA,MAAAK,EACQ,GAAAJ,EACH,MAAAe,EACJ,MAAAG,EAAA,MACa,SAAA,CAAAG,EAAAP,IAAA,CAEXI,EAAA,SAAAG,CAAA,EACArB,EAAA,UAAAA,EAAA,SAAAqB,EAAAP,CAAA,CAA6C,CAC/C,CAAA,CACF,CAAA,CAAA,CAKV"}