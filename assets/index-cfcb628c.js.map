{"version":3,"file":"index-cfcb628c.js","sources":["../../../../packages/file-upload/src/from-url/styles.ts","../../../../packages/file-upload/src/from-url/index.tsx"],"sourcesContent":["import { Box } from '@mui/material';\nimport { styled } from '@novatics-ui/styles';\nimport { FromUrlProps } from '.';\n\ninterface FromURLContainerProps extends Pick<FromUrlProps, 'variant'> {\n  disabled?: boolean;\n}\n\nexport const FromURLContainer = styled(Box)<FromURLContainerProps>((props) => {\n  const border = props.variant === 'single' ? '1px solid' : 'none';\n  const padding = props.variant === 'single' ? '24px' : '0';\n\n  return {\n    border: border,\n    padding: padding,\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '8px',\n    borderColor: props.theme.palette.grey[20],\n    width: 'fit-content',\n    minWidth: '500px',\n  };\n});\n","import { useState, useEffect } from 'react';\nimport { Box, TextField, TextFieldProps, Typography } from '@mui/material';\nimport { FromURLContainer } from './styles';\nimport { Button, ButtonProps } from '@novatics-ui/button';\n\nexport interface FromUrlProps {\n  acceptLabels?: string;\n  variant?: 'single' | 'combined';\n  disabled?: boolean;\n  buttonProps?: ButtonProps;\n  textFieldProps?: TextFieldProps;\n  error?: string;\n  onAccept?: (url: string) => void;\n  onReject?: (url: string) => void;\n  handleValidation?: (url: string) => string | null;\n  clearOnAccept?: boolean;\n  title?: string;\n  buttonLabel?: string;\n  formatsLabel?: string;\n  placeholder?: string;\n}\n\nexport function FromUrl(props: FromUrlProps) {\n  const {\n    acceptLabels,\n    variant = 'single',\n    disabled,\n    buttonProps,\n    textFieldProps,\n    onAccept = () => undefined,\n    onReject = () => undefined,\n    handleValidation,\n    error,\n    clearOnAccept = true,\n    title = 'Upload by URL',\n    buttonLabel = 'Submit',\n    formatsLabel = 'Accepted formats:',\n    placeholder = 'Insert URL here',\n  } = props;\n\n  const [url, setUrl] = useState('');\n  const [errorText, setErrorText] = useState<string>(error || '');\n\n  useEffect(() => {\n    if (error) setErrorText(error);\n  }, [error]);\n\n  function isValidUrl(urlString: string) {\n    try {\n      return Boolean(new URL(urlString));\n    } catch (err) {\n      return false;\n    }\n  }\n\n  const validate = (url: string): string | null => {\n    if (handleValidation) return handleValidation(url);\n    if (!url) return 'URL is required';\n    if (!isValidUrl(url)) return 'Invalid URL';\n    return null;\n  };\n\n  const handleSubmit = () => {\n    setErrorText('');\n    const validationResult = validate(url);\n    if (validationResult === null) {\n      onAccept(url);\n      if (clearOnAccept) setUrl('');\n    } else {\n      onReject(url);\n      setErrorText(validationResult);\n    }\n  };\n\n  return (\n    <FromURLContainer variant={variant} disabled={disabled}>\n      <Typography variant=\"overline\" color=\"grey.70\">\n        {title}\n      </Typography>\n\n      <Box sx={{ display: 'flex', gap: '8px' }}>\n        <TextField\n          variant=\"outlined\"\n          placeholder={placeholder}\n          error={Boolean(errorText)}\n          inputProps={{ style: { padding: '0' } }}\n          sx={{ flexGrow: 1 }}\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          disabled={disabled}\n          {...textFieldProps}\n        />\n        <Button\n          variant=\"outlined\"\n          disabled={!url || disabled}\n          sx={{ textTransform: 'capitalize' }}\n          onClick={() => handleSubmit()}\n          {...buttonProps}\n        >\n          {buttonLabel}\n        </Button>\n      </Box>\n\n      <Typography\n        variant=\"caption\"\n        color={errorText ? 'error.main' : 'grey.70'}\n      >\n        {errorText\n          ? errorText\n          : acceptLabels\n          ? `${formatsLabel} ${acceptLabels}`\n          : 'All files are accepted'}\n      </Typography>\n    </FromURLContainer>\n  );\n}\n"],"names":["FromURLContainer","styled","Box","props","border","padding","FromUrl","acceptLabels","variant","disabled","buttonProps","textFieldProps","onAccept","onReject","handleValidation","error","clearOnAccept","title","buttonLabel","formatsLabel","placeholder","url","setUrl","useState","errorText","setErrorText","useEffect","isValidUrl","urlString","validate","url2","handleSubmit","validationResult","jsxs","jsx","Typography","TextField","Button"],"mappings":"8TAQO,MAAMA,EAAmBC,EAAOC,CAAG,EAA0BC,GAAU,CAC5E,MAAMC,EAASD,EAAM,UAAY,SAAW,YAAc,OACpDE,EAAUF,EAAM,UAAY,SAAW,OAAS,IAE/C,MAAA,CACL,OAAAC,EACA,QAAAC,EACA,QAAS,OACT,cAAe,SACf,IAAK,MACL,YAAaF,EAAM,MAAM,QAAQ,KAAK,EAAE,EACxC,MAAO,cACP,SAAU,OAAA,CAEd,CAAC,ECAM,SAAAG,EAAAH,EAAA,CACL,KAAA,CAAM,aAAAI,EACJ,QAAAC,EAAA,SACU,SAAAC,EACV,YAAAC,EACA,eAAAC,EACA,SAAAC,EAAA,IAAA,GACiB,SAAAC,EAAA,IAAA,GACA,iBAAAC,EACjB,MAAAC,EACA,cAAAC,EAAA,GACgB,MAAAC,EAAA,gBACR,YAAAC,EAAA,SACM,aAAAC,EAAA,oBACC,YAAAC,EAAA,iBACD,EAAAjB,EAGhB,CAAAkB,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAAA,SAAAR,GAAA,EAAA,EAEAW,EAAAA,UAAA,IAAA,CACEX,GAAWU,EAAAV,CAAA,CAAkB,EAAA,CAAAA,CAAA,CAAA,EAG/B,SAAAY,EAAAC,EAAA,CACE,GAAA,CACE,MAAA,EAAA,IAAA,IAAAA,CAAA,CAAiC,MAAA,CAEjC,MAAA,EAAO,CACT,CAGF,MAAAC,EAAAC,GACEhB,EAAsBA,EAAAgB,CAAA,EACtBA,EACAH,EAAAG,CAAA,EACA,KADsB,cADZ,kBAKZC,EAAA,IAAA,CACEN,EAAA,EAAA,EACA,MAAAO,EAAAH,EAAAR,CAAA,EACAW,IAAA,MACEpB,EAAAS,CAAA,EACAL,GAAmBM,EAAA,EAAA,IAEnBT,EAAAQ,CAAA,EACAI,EAAAO,CAAA,EACF,EAGF,OAAAC,EAAA,KAAAjC,EAAA,CAAA,QAAAQ,EAAA,SAAAC,EAAA,SAAA,CAEIyB,MAAAC,EAAA,CAAA,QAAA,WAAA,MAAA,UAAA,SAAAlB,EAAA,EAEAgB,OAAA/B,EAAA,CAAA,GAAA,CAAA,QAAA,OAAA,IAAA,KAAA,EAAA,SAAA,CAGEgC,EAAA,IAAAE,EAAC,CAAA,QAAA,WACS,YAAAhB,EACR,MAAA,EAAAI,EACwB,WAAA,CAAA,MAAA,CAAA,QAAA,GAAA,CAAA,EACc,GAAA,CAAA,SAAA,CAAA,EACpB,MAAAH,EACX,SAAA,GAAAC,EAAA,EAAA,OAAA,KAAA,EAC+B,SAAAb,EACtC,GAAAE,CACI,CAAA,EACNuB,EAAA,IACAG,EAAC,CAAA,QAAA,WACS,SAAA,CAAAhB,GAAAZ,EACU,GAAA,CAAA,cAAA,YAAA,EACgB,QAAA,IAAAsB,EAAA,EACN,GAAArB,EACxB,SAAAQ,CAEH,CAAA,CACH,EAAA,EACFgB,EAAA,IAEAC,EAAC,CAAA,QAAA,UACS,MAAAX,EAAA,aAAA,UAC0B,SAAAA,IAAAjB,EAAA,GAAAY,CAAA,IAAAZ,CAAA,GAAA,yBAM9B,CAAA,CACN,CAAA,CAAA,CAGN"}