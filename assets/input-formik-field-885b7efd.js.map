{"version":3,"file":"input-formik-field-885b7efd.js","sources":["../../../../packages/input-field/src/lib/input-field.tsx","../../../../packages/input-field/src/lib/input-formik-field.tsx"],"sourcesContent":["import MuiInputBase, { InputBaseProps } from '@mui/material/InputBase';\nimport FormControl from '@mui/material/FormControl';\nimport { generateUtilityClass } from '@mui/material';\nimport FormLabel, { FormLabelBaseProps } from '@mui/material/FormLabel';\nimport FormHelperText, {\n  FormHelperTextProps,\n} from '@mui/material/FormHelperText';\n\nconst getClassNameFromProps = (props: InputFieldProps) => {\n  const classNames: string[] = [];\n\n  if (props.size === 'large')\n    classNames.push(generateUtilityClass('NuiInputField', 'sizeLarge'));\n\n  if (props.className) {\n    classNames.push(props.className);\n  }\n\n  return classNames.join(' ');\n};\n\nexport type InputFieldProps = Omit<InputBaseProps, 'size' | 'error'> & {\n  label?: FormLabelBaseProps['children'];\n  hint?: FormHelperTextProps['children'];\n  error?: boolean | FormHelperTextProps['children'];\n  size?: InputBaseProps['size'] | 'large';\n  withTextHelper?: boolean;\n};\n\nconst InputField = (props: InputFieldProps) => {\n  const {\n    label,\n    error,\n    required,\n    hint,\n    size,\n    withTextHelper = true,\n    ...other\n  } = props;\n  const className = getClassNameFromProps(props);\n\n  let helperText = hint;\n\n  if (error && typeof error != 'boolean') {\n    helperText = error;\n  }\n\n  return (\n    <FormControl>\n      <FormLabel required={required} focused={false}>\n        {label}\n      </FormLabel>\n      <MuiInputBase\n        error={Boolean(error)}\n        required={required}\n        size={size === 'large' ? 'medium' : size}\n        {...other}\n        className={className}\n      />\n      {withTextHelper || helperText ? (\n        <FormHelperText error={Boolean(error)} sx={{ minHeight: '17px' }}>\n          {helperText}\n        </FormHelperText>\n      ) : null}\n    </FormControl>\n  );\n};\n\nexport { InputField };\nexport default InputField;\nexport * from '@mui/material/OutlinedInput';\n","import { useCallback, useMemo } from 'react';\nimport { Field, FieldProps } from 'formik';\n\nimport { InputField, InputFieldProps } from './input-field';\n\nexport type InputFormikFieldProps<T, U> = InputFieldProps & FieldProps<T, U>;\n\nconst InputFormikField = <T, U>(props: InputFormikFieldProps<T, U>) => {\n  const internalValidate = useCallback(\n    (value) => (props.required ? !value : false),\n    [props.required]\n  );\n\n  const label = useMemo(\n    () => (props.label ? props.label : props.name),\n    [props.label, props.name]\n  );\n\n  return (\n    <Field validate={internalValidate} {...props}>\n      {(p: FieldProps<boolean>) => {\n        const { field, form, meta } = p;\n        const hasError =\n          (form.touched || meta.touched) &&\n          (meta.error || Boolean(form.errors[field.name]));\n\n        return (\n          <InputField\n            {...props}\n            error={hasError}\n            label={label}\n            value={field.value}\n            onChange={(event) => {\n              field.onChange(event);\n              props.onChange && props.onChange(event);\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nexport { InputFormikField };\nexport default InputFormikField;\n"],"names":["getClassNameFromProps","props","classNames","generateUtilityClass","InputField","label","error","required","hint","size","withTextHelper","other","className","helperText","jsxs","FormControl","jsx","FormLabel","MuiInputBase","FormHelperText","InputFormikField","internalValidate","useCallback","value","useMemo","Field","p","field","form","meta","hasError","event"],"mappings":"0VAQA,MAAAA,EAAAC,GAAA,CACE,MAAAC,EAAA,CAAA,EAEA,OAAAD,EAAA,OAAA,SACEC,EAAA,KAAAC,EAAA,gBAAA,WAAA,CAAA,EAEFF,EAAA,WACEC,EAAA,KAAAD,EAAA,SAAA,EAGFC,EAAA,KAAA,GAAA,CACF,EAUAE,EAAAH,GAAA,CACE,KAAA,CAAM,MAAAI,EACJ,MAAAC,EACA,SAAAC,EACA,KAAAC,EACA,KAAAC,EACA,eAAAC,EAAA,GACiB,GAAAC,CACd,EAAAV,EAELW,EAAAZ,EAAAC,CAAA,EAEA,IAAAY,EAAAL,EAEA,OAAAF,GAAA,OAAAA,GAAA,YACEO,EAAAP,GAGFQ,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,SAAAV,EAAA,QAAA,GAAA,SAAAF,EAAA,EAEAW,EACAE,EAAC,CAAA,MAAA,EAAAZ,EACqB,SAAAC,EACpB,KAAAE,IAAA,QAAA,SAAAA,EACoC,GAAAE,EAChC,UAAAC,CACJ,CAAA,EACFF,GAAAG,EAAAG,EAAAG,EAAA,CAAA,MAAA,EAAAb,EAAA,GAAA,CAAA,UAAA,MAAA,EAAA,SAAAO,CAAA,CAAA,EAAA,IAKI,CAAA,CAAA,CAGV,smDC3DA,MAAAO,EAAAnB,GAAA,CACE,MAAAoB,EAAAC,EAAA,YAAyBC,GAAAtB,EAAA,SAAA,CAAAsB,EAAA,GACe,CAAAtB,EAAA,QAAA,CACvB,EAGjBI,EAAAmB,EAAA,QAAc,IAAAvB,EAAA,MAAAA,EAAA,MAAAA,EAAA,KAC6B,CAAAA,EAAA,MAAAA,EAAA,IAAA,CACjB,EAG1B,OAAAe,EAAAS,EAAA,CAAA,SAAAJ,EAAA,GAAApB,EAAA,SAAAyB,GAAA,CAGM,KAAA,CAAA,MAAAC,EAAA,KAAAC,EAAA,KAAAC,CAAA,EAAAH,EACAI,GAAAF,EAAA,SAAAC,EAAA,WAAAA,EAAA,OAAA,EAAAD,EAAA,OAAAD,EAAA,IAAA,GAIA,OAAAX,EACEZ,EAAC,CAAA,GAAAH,EACK,MAAA6B,EACG,MAAAzB,EACP,MAAAsB,EAAA,MACa,SAAAI,GAAA,CAEXJ,EAAA,SAAAI,CAAA,EACA9B,EAAA,UAAAA,EAAA,SAAA8B,CAAA,CAAsC,CACxC,CAAA,CACF,CAAA,CAAA,CAKV"}